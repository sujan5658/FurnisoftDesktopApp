
package com.furnisoft.views;

import com.furnisoft.pojos.Category;
import com.furnisoft.pojos.Message;
import com.furnisoft.services.CategoryService;
import com.furnisoft.services.HardwareService;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author koju5658
 */
public class SingleCategory extends javax.swing.JFrame {

    private Category category;
    private MainFrame mainFrame;
    String regex = "^[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher;
    private List<Category> categories = new ArrayList<Category>();
    private Message message;
    private CategoryService catServ;
    private Category threadCategory;
    private String oldCategory;
    
    public SingleCategory() {
        initComponents();
    }
    public void setCategoryObject(MainFrame mainFrame,Category category,List<Category> categories){
        this.categories = categories;
        this.category = category;
        this.mainFrame = mainFrame;
        this.oldCategory = category.getCategoryName();
        updateCategoryName.setText(category.getCategoryName());
        updateCatRegDate.setText(category.getRegDate());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        updateCategoryName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        updateCatRegDate = new javax.swing.JTextField();
        updateCatButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Category");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setBackground(new java.awt.Color(153, 0, 153));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Your Category");
        jLabel1.setOpaque(true);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel14.setText("Registered Date should be in Format  YYYY-MM-DD [ Nepali BS ]");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Category Name ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Registered Date");

        updateCatRegDate.setToolTipText("YYYY-MM-DD");

        updateCatButton.setText("Update");
        updateCatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateCatRegDate, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateCatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateCatRegDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateCatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(436, 331));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private boolean checkDate(String date){
        this.matcher = this.pattern.matcher(date);
        return this.matcher.matches();
    }
    private void updateCatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCatButtonActionPerformed

        String categoryName = updateCategoryName.getText();
        String regDate = updateCatRegDate.getText();

        if(categoryName.equals("") || regDate.equals("")){
            JOptionPane.showMessageDialog(null,"Both fields are required.!!!","Empty Fields",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            if(this.checkDate(regDate)){
                int confirm = JOptionPane.showConfirmDialog(null,"Are you sure to Update ?","Confirm Message",JOptionPane.INFORMATION_MESSAGE);
                if(confirm==0){
                    this.categories.remove(this.category);
                    boolean categoryCheck = false;
                    for(Category category : this.categories){
                        if(category.getCategoryName().equals(categoryName)){
                            categoryCheck= true;
                            break;
                        }
                    }
                    if(categoryCheck){
                        JOptionPane.showMessageDialog(null,"Same Category Name already exist.!!","Similar content",JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        
                        //long catID = this.category.getId();
                        PleaseWait wait = new PleaseWait();
                        wait.setVisible(true);
                        SwingWorker<Void,Void> worker = new SwingWorker<Void,Void>()
                        {
                            @Override
                            protected Void doInBackground()
                            {
                                threadCategory = new Category();
                                threadCategory.setId(category.getId());
                                threadCategory.setCategoryName(categoryName);
                                threadCategory.setRegDate(regDate);

                                message = new Message();
                                catServ = new CategoryService();

                                message = catServ.updateCategory(threadCategory);
                                if(message.isMessageStatus()){
                                    JOptionPane.showMessageDialog(null,message.getMessage(),"Error Occured",JOptionPane.ERROR_MESSAGE);
                                }
                                else{
                                    updateCategoryName.setText("");
                                    updateCatRegDate.setText("");
                                    HardwareService hardServ = new HardwareService();
                                    hardServ.updateHardwares(oldCategory, categoryName);
                                    mainFrame.updateCategoryList();
                                    JOptionPane.showMessageDialog(null,message.getMessage(),"Succeed",JOptionPane.INFORMATION_MESSAGE);
                                    dispose();
                                }
                                return null;
                            }

                            @Override
                            protected void done()
                            {
                               wait.dispose();
                            }
                        };
                        worker.execute();
                        
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Date Must be in YYYY-MM-DD eg : 2077-02-06","Invalid Date",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateCatButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SingleCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SingleCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SingleCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SingleCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SingleCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton updateCatButton;
    private javax.swing.JTextField updateCatRegDate;
    private javax.swing.JTextField updateCategoryName;
    // End of variables declaration//GEN-END:variables
}
