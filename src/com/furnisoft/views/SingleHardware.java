
package com.furnisoft.views;

import com.furnisoft.pojos.Category;
import com.furnisoft.pojos.Hardwares;
import com.furnisoft.pojos.Message;
import com.furnisoft.services.HardwareService;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author koju5658
 */
public class SingleHardware extends javax.swing.JFrame {

    String regex = "^[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher;
    private Message message;
    List<Hardwares> hardwares = new ArrayList<Hardwares>();
    private Hardwares hardware;
    private Hardwares threadHardware;
    private MainFrame mainFrame;
    private SingleHardware self;
    public SingleHardware() {
        initComponents();
        this.self = this;
    }
    private boolean checkDate(String date){
        this.matcher = this.pattern.matcher(date);
        return this.matcher.matches();
    }
    public void setHardware(Hardwares hardware,List<Category> categories,List<Hardwares> hardwares){
        this.hardware = hardware;
        this.hardwares = hardwares;
        txtHardwareName.setText(hardware.getHardwareName());
        txtHardwareSize.setText(hardware.getSize());
        txtHardwareRegDate.setText(hardware.getRegDate());
        txtHardwarePrice.setText(Double.toString(hardware.getPrice()));
        selectCategory.removeAllItems();
        for(Category category : categories){
            selectCategory.addItem(category.getCategoryName());
        }
        selectCategory.setSelectedItem(this.hardware.getCategory());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtHardwareName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        selectCategory = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txtHardwarePrice = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtHardwareSize = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtHardwareRegDate = new javax.swing.JTextField();
        hardwareUpdateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Hardware");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setBackground(new java.awt.Color(153, 0, 153));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Your Hardware");
        jLabel1.setOpaque(true);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Hardware Name ");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Category");

        selectCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Price");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Size");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel22.setText("Registered Date should be in Format  YYYY-MM-DD [ Nepali BS ]");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("Registered Date");

        hardwareUpdateButton.setText("Update");
        hardwareUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardwareUpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHardwareSize, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHardwarePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(selectCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHardwareName, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtHardwareRegDate, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hardwareUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(33, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(438, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHardwareName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHardwarePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHardwareSize, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHardwareRegDate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(30, 30, 30)
                    .addComponent(hardwareUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(96, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(436, 550));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void setMainFrame(MainFrame mainFrame){
        this.mainFrame = mainFrame;
    }
    private void hardwareUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardwareUpdateButtonActionPerformed
     
        String hardwareName = txtHardwareName.getText();
        String category = selectCategory.getSelectedItem().toString();
        String size = txtHardwareSize.getText();
        String price = txtHardwarePrice.getText();
        String regDate = txtHardwareRegDate.getText();

        if(hardwareName.equals("") || category.equals("") || size.equals("") || price.equals("") || regDate.equals("")){
            JOptionPane.showMessageDialog(null,"All fields are required.!!!","Empty Fields",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            if(this.checkDate(regDate)){
                int confirm = JOptionPane.showConfirmDialog(null,"Are you sure to Update ?","Confirm Message",JOptionPane.INFORMATION_MESSAGE);
                if(confirm==0){
                    this.hardwares.remove(this.hardware);
                    boolean hardwareCheck = false;
                    for(Hardwares hardware : this.hardwares){
                        if(hardware.getHardwareName().equals(hardwareName)){
                            hardwareCheck= true;
                            break;
                        }
                    }
                    if(hardwareCheck){
                        JOptionPane.showMessageDialog(null,"Same Hardware Name already exist.!!","Similar content",JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        
                        PleaseWait wait = new PleaseWait();
                        wait.setVisible(true);
                        SwingWorker<Void,Void> worker = new SwingWorker<Void,Void>()
                        {
                            @Override
                            protected Void doInBackground()
                            {
                                HardwareService hardServ = new HardwareService();
                                threadHardware = new Hardwares();
                                threadHardware.setId(hardware.getId());
                                threadHardware.setHardwareName(hardwareName);
                                threadHardware.setCategory(category);
                                threadHardware.setSize(size);
                                threadHardware.setPrice(Double.parseDouble(price));
                                threadHardware.setRegDate(regDate);
                                message = new Message();
                                message = hardServ.updateHardware(threadHardware);
                                if(message.isMessageStatus()){
                                    JOptionPane.showMessageDialog(null,message.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                                }
                                else{
                                    txtHardwareName.setText("");
                                    txtHardwareSize.setText("");
                                    txtHardwarePrice.setText("");
                                    txtHardwareRegDate.setText("");
                                    mainFrame.applyHardwareUpdate();
                                    JOptionPane.showMessageDialog(null,message.getMessage(),"Succeed",JOptionPane.INFORMATION_MESSAGE);
                                }
                                return null;
                            }

                            @Override
                            protected void done()
                            {
                                dispose();
                               wait.dispose();
                            }
                        };
                        worker.execute();
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Date Must be in YYYY-MM-DD eg : 2077-02-06","Invalid Date",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_hardwareUpdateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SingleHardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SingleHardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SingleHardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SingleHardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SingleHardware().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hardwareUpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> selectCategory;
    private javax.swing.JTextField txtHardwareName;
    private javax.swing.JTextField txtHardwarePrice;
    private javax.swing.JTextField txtHardwareRegDate;
    private javax.swing.JTextField txtHardwareSize;
    // End of variables declaration//GEN-END:variables
}
