/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.furnisoft.views;

import com.furnisoft.pojos.AmountPaid;
import com.furnisoft.pojos.Bill;
import com.furnisoft.pojos.Message;
import com.furnisoft.pojos.ShopDetails;
import com.furnisoft.services.BillService;
import com.furnisoft.services.PDFManager;
import com.furnisoft.services.ShopDetailsService;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author koju5658
 */
public class SinglePaymentDetails extends javax.swing.JFrame {

    private Bill bill;
    
    String regex = "^[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher;
    
    private Message message;
    private BillService billServ;
    private MainFrame mainFrame;
    
    public SinglePaymentDetails() {
        initComponents();
    }
    private boolean checkDate(String date){
        this.matcher = this.pattern.matcher(date);
        return this.matcher.matches();
    }
    public void setBill(Bill bill,MainFrame mainFrame){
        this.bill = bill;
        this.mainFrame = mainFrame;
        txtTitle.setText("Payment Details of : "+this.bill.getCustomerName());
        this.displayPaymentDetailTable();
    }
    public void displayPaymentDetailTable(){
        DefaultTableModel model = (DefaultTableModel)paymentDetailTable.getModel();
        model.setRowCount(0);
        
        Object [] col = new Object[4];
        int i=1;
        for(AmountPaid amountPaid: this.bill.getAmountPaid()){
            col[0] = i;
            col[1] = amountPaid.getDate();
            col[2] = amountPaid.getAmountPaid();
            col[3] = amountPaid.getAmountDue();
            model.addRow(col);
            i++;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTitle = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentDetailTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAmountPaid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        selectPaymentStatus = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Details");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(590, 390));

        txtTitle.setBackground(new java.awt.Color(153, 0, 153));
        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTitle.setForeground(new java.awt.Color(255, 255, 255));
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitle.setText("Payment Details");
        txtTitle.setOpaque(true);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        paymentDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "SN", "Date", "Paid Amount", "Amount Due"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(paymentDetailTable);
        if (paymentDetailTable.getColumnModel().getColumnCount() > 0) {
            paymentDetailTable.getColumnModel().getColumn(0).setMinWidth(40);
            paymentDetailTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            paymentDetailTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jTabbedPane1.addTab("Home", jScrollPane1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Amount Paid");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Payment Status");

        selectPaymentStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Payment Due", "Payment Complete" }));
        selectPaymentStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPaymentStatusActionPerformed(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectPaymentStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPaymentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Payment", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(txtTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(603, 410));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectPaymentStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPaymentStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectPaymentStatusActionPerformed
    private boolean checkDoubleParsable(String dbl){
        boolean quantityCheck = true;
        try{
            Double.parseDouble(dbl);
        }catch(Exception er){
            quantityCheck = false;
        }
        return quantityCheck;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String repaidDate = txtDate.getText();
        String amountPaid = txtAmountPaid.getText();
        String paymentStatus = selectPaymentStatus.getSelectedItem().toString();
        if(repaidDate.equals("") || amountPaid.equals("")){
            JOptionPane.showMessageDialog(null,"All fields are required.!!","Empty Fields",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            if(this.checkDate(repaidDate)){
                if(this.checkDoubleParsable(amountPaid)){
                    int check = JOptionPane.showConfirmDialog(null,"Are you sure to update ?","Confirm message",JOptionPane.INFORMATION_MESSAGE );
                    if(check==0){
                        double totalDue=this.bill.getGrandTotal();
                        AmountPaid amtPaid = new AmountPaid();
                        amtPaid.setAmountPaid(Math.round((Double.parseDouble(amountPaid))*100D) / 100D);
                        amtPaid.setDate(repaidDate);

                        List<AmountPaid> amtPd = new ArrayList<AmountPaid>();
                        amtPd = this.bill.getAmountPaid();

                        for(AmountPaid ap : amtPd){
                            totalDue-=ap.getAmountPaid();
                        }
                        amtPaid.setAmountDue(Math.round((totalDue-Double.parseDouble(amountPaid))*100D) / 100D);

                        amtPd.add(amtPaid);
                        this.bill.setPaymentStatus(paymentStatus);
                        this.bill.setAmountPaid(amtPd);

                        
                        PleaseWait wait = new PleaseWait();
                        wait.setVisible(true);
                        SwingWorker<Void,Void> worker = new SwingWorker<Void,Void>()
                        {
                            @Override
                            protected Void doInBackground()
                            {
                                ShopDetails shopDetails = new ShopDetails();
                                ShopDetailsService shopServ = new ShopDetailsService();
                                shopDetails = shopServ.getShopDetails();

                                PDFManager manager = new PDFManager();
                                if(manager.updateBill(bill, shopDetails)){
                                    message = new Message();

                                    billServ = new BillService();
                                    message = billServ.updateBill(bill);
                                    if(!message.isMessageStatus()){
                                        txtDate.setText("");
                                        txtAmountPaid.setText("");
                                        displayPaymentDetailTable();
                                        mainFrame.getBillsFromDatabase();
                                        mainFrame.displayBillTable();
                                        JOptionPane.showMessageDialog(null,message.getMessage(),"Succeed",JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(null,message.getMessage(),"Failed",JOptionPane.ERROR_MESSAGE);
                                    }
                                }
                                else{
                                    JOptionPane.showMessageDialog(null,"Failed to Update.","Failed",JOptionPane.ERROR_MESSAGE);
                                }
                                return null;
                            }

                            @Override
                            protected void done()
                            {
                               wait.dispose();
                            }
                        };
                        worker.execute();
                    }
                    
                }
                else{
                    JOptionPane.showMessageDialog(null,"Amount paid must be in numbers.","Invalid Amount Paid",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"Date Must be in YYYY-MM-DD eg : 2077-02-06","Invalid Date",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinglePaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinglePaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinglePaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinglePaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinglePaymentDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable paymentDetailTable;
    private javax.swing.JComboBox<String> selectPaymentStatus;
    private javax.swing.JTextField txtAmountPaid;
    private javax.swing.JTextField txtDate;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
